{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.score = 0;\n                this.status = \"playing\";\n                this.fillOutRandomCell(this.generateNumber());\n                this.fillOutRandomCell(this.generateNumber());\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                // this.start();\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"filterZero\",\n            value: function filterZero(row) {\n                return row.filter(function(val) {\n                    return val !== 0;\n                });\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(row) {\n                var modifiedRow = this.filterZero(row);\n                for(var i = 0; i < modifiedRow.length - 1; i++)if (modifiedRow[i] === modifiedRow[i + 1]) {\n                    modifiedRow[i] *= 2;\n                    modifiedRow[i + 1] = 0;\n                    this.score += modifiedRow[i];\n                }\n                modifiedRow = this.filterZero(modifiedRow);\n                while(modifiedRow.length < 4)modifiedRow.push(0);\n                return modifiedRow;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status === \"playing\") for(var r = 0; r < 4; r++){\n                    var row = this.state[r];\n                    row = this.slide(row);\n                    this.state[r] = row;\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status === \"playing\") for(var r = 0; r < 4; r++){\n                    var row = this.state[r];\n                    row.reverse();\n                    row = this.slide(row);\n                    row.reverse();\n                    this.state[r] = row;\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status === \"playing\") for(var c = 0; c < 4; c++){\n                    var tempRow = [];\n                    for(var i = 0; i < 4; i++)tempRow.push(this.state[i][c]);\n                    tempRow = this.slide(tempRow);\n                    for(var j = 0; j < 4; j++)this.state[j][c] = tempRow[j];\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status === \"playing\") for(var c = 0; c < 4; c++){\n                    var tempRow = [];\n                    for(var i = 0; i < 4; i++)tempRow.push(this.state[i][c]);\n                    tempRow.reverse();\n                    tempRow = this.slide(tempRow);\n                    tempRow.reverse();\n                    for(var j = 0; j < 4; j++)this.state[j][c] = tempRow[j];\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            // Add your own methods here\n            // return 2 or 4. 4 probability is 10%\n            key: \"generateNumber\",\n            value: function generateNumber() {\n                return Math.random() >= 0.9 ? 4 : 2;\n            }\n        },\n        {\n            // return number between 0 and 15\n            key: \"getCellValue\",\n            value: function getCellValue() {\n                return Math.floor(Math.random() * 16);\n            }\n        },\n        {\n            key: \"fillOutRandomCell\",\n            value: function fillOutRandomCell(value) {\n                // getting array of empty cells\n                var emptyCells = this.getEmptyCells();\n                if (emptyCells.length > 0) {\n                    var randomCellIndex = Math.floor(Math.random() * emptyCells.length);\n                    var randomCell = emptyCells[randomCellIndex];\n                    this.state[Math.floor(randomCell / 4)][randomCell % 4] = value;\n                    emptyCells = this.getEmptyCells();\n                }\n                if (emptyCells.length === 0) {\n                    if (!this.isMovePossible()) this.status = \"lose\";\n                }\n            }\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                var emptyCells = [];\n                var flatState = this.getState().flat();\n                for(var i = 0; i < flatState.length; i++)if (flatState[i] === 0) emptyCells.push(i);\n                return emptyCells;\n            }\n        },\n        {\n            key: \"updateStatus\",\n            value: function updateStatus() {\n                var win = this.state.filter(function(e) {\n                    return e === 2048;\n                });\n                if (win.length >= 1) this.status = \"win\";\n            }\n        },\n        {\n            key: \"isMovePossible\",\n            value: function isMovePossible() {\n                var result = false;\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 3; j++){\n                    // checking rows (move left|right)\n                    if (this.state[i][j] === this.state[i][j + 1]) result = true;\n                    // checking columns (move up|down)\n                    if (this.state[j][i] === this.state[j + 1][i]) result = true;\n                }\n                return result;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\n$197cd56b15c33885$var$renderGameField();\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function(e) {\n    if (e.target.classList.contains(\"start\")) $197cd56b15c33885$var$game.start();\n    else if (e.target.classList.contains(\"restart\")) $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$resetControls();\n    $197cd56b15c33885$var$renderGameField($197cd56b15c33885$var$game.getState());\n});\nfunction $197cd56b15c33885$var$resetControls() {\n    document.querySelector(\".game-score\").innerHTML = 0;\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case \"idle\":\n            $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n            $197cd56b15c33885$var$startButton.classList.add(\"start\");\n            $197cd56b15c33885$var$startButton.innerHTML = \"Start\";\n            document.removeEventListener(\"keydown\", $197cd56b15c33885$var$control);\n            break;\n        case \"playing\":\n            $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n            $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n            $197cd56b15c33885$var$startButton.innerHTML = \"Restart\";\n            document.addEventListener(\"keydown\", $197cd56b15c33885$var$control);\n            break;\n    }\n    document.querySelectorAll(\".message\").forEach(function(e) {\n        return e.classList.add(\"hidden\");\n    });\n}\nfunction $197cd56b15c33885$var$control(e) {\n    var beforeState = $197cd56b15c33885$var$game.getState().map(function(row) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n    });\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n    }\n    if (beforeState.toString() !== $197cd56b15c33885$var$game.getState().toString()) {\n        $197cd56b15c33885$var$game.fillOutRandomCell($197cd56b15c33885$var$game.generateNumber());\n        $197cd56b15c33885$var$renderGameField();\n    }\n}\nfunction $197cd56b15c33885$var$renderGameField() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    var state = $197cd56b15c33885$var$game.getState();\n    var score = $197cd56b15c33885$var$game.getScore();\n    document.querySelector(\".game-score\").innerHTML = score;\n    for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n        var number = state[i][j];\n        var cell = $197cd56b15c33885$var$gameField.rows[i].cells[j];\n        cell.innerHTML = number || \"\";\n        cell.classList = \"field-cell\";\n        if (number) cell.classList.add(\"field-cell--\".concat(number));\n    }\n    $197cd56b15c33885$var$game.updateStatus();\n    if (gameStatus === \"lose\" || gameStatus === \"win\") {\n        document.querySelector(\".message-\".concat(gameStatus)).classList.remove(\"hidden\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$control);\n    }\n}\n\n})();\n//# sourceMappingURL=index.d8da72a2.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\n\nconst startButton = document.querySelector('.button');\nconst gameField = document.querySelector('.game-field');\n\nrenderGameField();\n\nstartButton.addEventListener('click', (e) => {\n  if (e.target.classList.contains('start')) {\n    game.start();\n  } else if (e.target.classList.contains('restart')) {\n    game.restart();\n  }\n  resetControls();\n  renderGameField(game.getState());\n});\n\nfunction resetControls() {\n  document.querySelector('.game-score').innerHTML = 0;\n\n  switch (game.getStatus()) {\n    case 'idle':\n      startButton.classList.remove('restart');\n      startButton.classList.add('start');\n      startButton.innerHTML = 'Start';\n      document.removeEventListener('keydown', control);\n      break;\n\n    case 'playing':\n      startButton.classList.remove('start');\n      startButton.classList.add('restart');\n      startButton.innerHTML = 'Restart';\n      document.addEventListener('keydown', control);\n      break;\n  }\n\n  document\n    .querySelectorAll('.message')\n    .forEach((e) => e.classList.add('hidden'));\n}\n\nfunction control(e) {\n  const beforeState = game.getState().map((row) => [...row]);\n\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n  }\n\n  if (beforeState.toString() !== game.getState().toString()) {\n    game.fillOutRandomCell(game.generateNumber());\n    renderGameField();\n  }\n}\n\nfunction renderGameField() {\n  const gameStatus = game.getStatus();\n  const state = game.getState();\n  const score = game.getScore();\n\n  document.querySelector('.game-score').innerHTML = score;\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      const number = state[i][j];\n      const cell = gameField.rows[i].cells[j];\n\n      cell.innerHTML = number || '';\n      cell.classList = 'field-cell';\n\n      if (number) {\n        cell.classList.add(`field-cell--${number}`);\n      }\n    }\n  }\n  game.updateStatus();\n\n  if (gameStatus === 'lose' || gameStatus === 'win') {\n    document.querySelector(`.message-${gameStatus}`).classList.remove('hidden');\n    document.removeEventListener('keydown', control);\n  }\n}\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.score = 0;\n    this.status = 'playing';\n\n    this.fillOutRandomCell(this.generateNumber());\n    this.fillOutRandomCell(this.generateNumber());\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = this.initialState.map((row) => [...row]);\n    // this.start();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  filterZero(row) {\n    return row.filter((val) => val !== 0);\n  }\n\n  slide(row) {\n    let modifiedRow = this.filterZero(row);\n\n    for (let i = 0; i < modifiedRow.length - 1; i++) {\n      if (modifiedRow[i] === modifiedRow[i + 1]) {\n        modifiedRow[i] *= 2;\n        modifiedRow[i + 1] = 0;\n        this.score += modifiedRow[i];\n      }\n    }\n\n    modifiedRow = this.filterZero(modifiedRow);\n\n    while (modifiedRow.length < 4) {\n      modifiedRow.push(0);\n    }\n\n    return modifiedRow;\n  }\n\n  moveLeft() {\n    if (this.status === 'playing') {\n      for (let r = 0; r < 4; r++) {\n        let row = this.state[r];\n\n        row = this.slide(row);\n        this.state[r] = row;\n      }\n    }\n  }\n\n  moveRight() {\n    if (this.status === 'playing') {\n      for (let r = 0; r < 4; r++) {\n        let row = this.state[r];\n\n        row.reverse();\n        row = this.slide(row);\n        row.reverse();\n        this.state[r] = row;\n      }\n    }\n  }\n\n  moveUp() {\n    if (this.status === 'playing') {\n      for (let c = 0; c < 4; c++) {\n        let tempRow = [];\n\n        for (let i = 0; i < 4; i++) {\n          tempRow.push(this.state[i][c]);\n        }\n\n        tempRow = this.slide(tempRow);\n\n        for (let j = 0; j < 4; j++) {\n          this.state[j][c] = tempRow[j];\n        }\n      }\n    }\n  }\n\n  moveDown() {\n    if (this.status === 'playing') {\n      for (let c = 0; c < 4; c++) {\n        let tempRow = [];\n\n        for (let i = 0; i < 4; i++) {\n          tempRow.push(this.state[i][c]);\n        }\n        tempRow.reverse();\n        tempRow = this.slide(tempRow);\n        tempRow.reverse();\n\n        for (let j = 0; j < 4; j++) {\n          this.state[j][c] = tempRow[j];\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  // Add your own methods here\n\n  // return 2 or 4. 4 probability is 10%\n  generateNumber() {\n    return Math.random() >= 0.9 ? 4 : 2;\n  }\n\n  // return number between 0 and 15\n  getCellValue() {\n    return Math.floor(Math.random() * 16);\n  }\n\n  fillOutRandomCell(value) {\n    // getting array of empty cells\n    let emptyCells = this.getEmptyCells();\n\n    if (emptyCells.length > 0) {\n      const randomCellIndex = Math.floor(Math.random() * emptyCells.length);\n      const randomCell = emptyCells[randomCellIndex];\n\n      this.state[Math.floor(randomCell / 4)][randomCell % 4] = value;\n      emptyCells = this.getEmptyCells();\n    }\n\n    if (emptyCells.length === 0) {\n      if (!this.isMovePossible()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  getEmptyCells() {\n    const emptyCells = [];\n    const flatState = this.getState().flat();\n\n    for (let i = 0; i < flatState.length; i++) {\n      if (flatState[i] === 0) {\n        emptyCells.push(i);\n      }\n    }\n\n    return emptyCells;\n  }\n\n  updateStatus() {\n    const win = this.state.filter((e) => e === 2048);\n\n    if (win.length >= 1) {\n      this.status = 'win';\n    }\n  }\n\n  isMovePossible() {\n    let result = false;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        // checking rows (move left|right)\n        if (this.state[i][j] === this.state[i][j + 1]) {\n          result = true;\n        }\n\n        // checking columns (move up|down)\n        if (this.state[j][i] === this.state[j + 1][i]) {\n          result = true;\n        }\n      }\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","state","map","row","score","status","key","value","fillOutRandomCell","generateNumber","filter","val","modifiedRow","filterZero","push","r","slide","reverse","c","tempRow","j","Math","random","floor","emptyCells","getEmptyCells","randomCellIndex","randomCell","isMovePossible","flatState","getState","flat","win","e","result","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$startButton","document","querySelector","$197cd56b15c33885$var$gameField","$197cd56b15c33885$var$control","beforeState","moveUp","moveDown","moveLeft","moveRight","$197cd56b15c33885$var$renderGameField","gameStatus","getStatus","getScore","innerHTML","number","cell","rows","cells","classList","add","concat","updateStatus","remove","removeEventListener","addEventListener","contains","start","restart","$197cd56b15c33885$var$resetControls","querySelectorAll","forEach"],"version":3,"file":"index.d8da72a2.js.map"}